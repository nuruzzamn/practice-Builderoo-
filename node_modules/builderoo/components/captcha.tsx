import React, {forwardRef, useEffect, useRef, useState, useImperativeHandle, ComponentProps} from 'react';
import Script from 'next/script'
import {useApp} from "../hooks/simple";

export type CaptchaRef = {
  verified: () => boolean,
  captchaVisible: boolean,
  loadAltCaptcha: () => void
}

export type CaptchaProps = {
}

const CaptchaComponent = forwardRef<CaptchaRef, CaptchaProps>(function Captcha(props, ref) {

  const loadAttempted = useRef(false)

  const app = useApp()
  const [loaded, setLoaded] = useState(false)
  const [visible, setVisible] = useState(false)
  // @ts-ignore
  const values = app.captcha

  useEffect(() => {
    if (!loaded || !visible || loadAttempted.current) return
    loadAttempted.current = true
    // @ts-ignore
    const captcha = grecaptcha
    captcha.ready(() => {
      captcha.render('recaptcha-render-slot', {
        'sitekey' : values.altSiteKey,
        'callback' : (token: string) => {
          // console.log("response", captcha.getResponse())
        }
      });
    });
  }, [loaded, visible])

  useImperativeHandle(ref, () => {
    return {
      verified: () => {
        if (!visible) return true
        // @ts-ignore
        const captcha = grecaptcha
        return captcha && captcha.getResponse().length !== 0;
      },
      captchaVisible: visible,
      loadAltCaptcha: () => {
        setVisible(true)
      }
    };
  }, [visible]);

  return (
    <>
      <style jsx global>{`
        .grecaptcha-badge { visibility: hidden; }
      `}</style>
      <Script src={`https://www.google.com/recaptcha/api.js?render=${values.siteKey}`} async={true} defer={true} onLoad={() => setLoaded(true)} />
      <div id="recaptcha-render-slot"></div>
    </>
  );
});


const Terms = forwardRef<HTMLDivElement, ComponentProps<"div">>((props, ref) => {
  return (
    <div ref={ref} {...props}>
      This site is protected by reCAPTCHA and the Google&nbsp;
      <a href="https://policies.google.com/privacy" target="_blank">Privacy Policy</a> and&nbsp;
      <a href="https://policies.google.com/terms" target="_blank">Terms of Service</a> apply.
    </div>
  )
})

export let Captcha = Object.assign(CaptchaComponent, { Terms })
