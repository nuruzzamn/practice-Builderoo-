import React, {useMemo, useRef, useState} from "react"
import type { AppProps } from 'next/app'
import {CartContext, AppContext, PageSpecificModelDataContext, UserContext, PaginationContext} from "../context"


export default function App({Component, pageProps}: AppProps) {
  const PageComponent = Component as any
  if (pageProps.__isPreview) return <PageComponent />
  const {product, collection, post, page, collections, order, orders, search, pageNumber, itemsPerPage, itemsCount, ...restPageProps} = pageProps

  const [cart, setCart] = useState(pageProps.cart)
  const [user, setUser] = useState(pageProps.user)
  const appContextValue = useRef(pageProps.app)

  const cartContextValue = useMemo(() =>({cart, setCart}), [cart, setCart])
  const userContextValue = useMemo(() =>({user, setUser}), [user, setUser])

  const paginationContextValue = useMemo(() => (
    {pageNumber, itemsPerPage, itemsCount}
  ), [pageNumber, itemsPerPage, itemsCount])

  const pageSpecificModelDataContextValue = useMemo(() => (
    {product, collection, post, page, collections, order, orders, search}
  ), [pageProps])

  return (
    <AppContext.Provider value={appContextValue.current}>
      <CartContext.Provider value={cartContextValue}>
        <UserContext.Provider value={userContextValue}>
          <PageSpecificModelDataContext.Provider value={pageSpecificModelDataContextValue}>
            <PaginationContext.Provider value={paginationContextValue}>
              <PageComponent {...restPageProps} />
            </PaginationContext.Provider>
          </PageSpecificModelDataContext.Provider>
        </UserContext.Provider>
      </CartContext.Provider>
    </AppContext.Provider>
  )
}